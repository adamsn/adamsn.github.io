name: Generate PDF Resume

on:
  push:
    branches: [ main ]
    paths:
      - 'index.html'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm init -y
          npm install puppeteer

      - name: Generate PDF
        run: |
          cat > generate-pdf.js << 'EOL'
          const puppeteer = require('puppeteer');
          const path = require('path');
          const fs = require('fs');

          (async () => {
            console.log('Starting PDF generation process...');

            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            const page = await browser.newPage();
            
            // Use print media type to apply print-specific CSS
            await page.emulateMediaType('print');

            const htmlPath = path.join(process.cwd(), 'index.html');
            
            await page.goto(`file://${htmlPath}`, {
              waitUntil: 'networkidle0'
            });

            // Ensure the output directory exists
            const outputDir = path.join(process.cwd(), 'docs');
            if (!fs.existsSync(outputDir)) {
              fs.mkdirSync(outputDir, { recursive: true });
            }

            const pdfPath = path.join(outputDir, 'pdf.pdf');
            
            await page.pdf({
              path: pdfPath,
              format: 'A4',
              printBackground: true,
              displayHeaderFooter: false
            });

            await browser.close();
            console.log('PDF generated successfully');
          })();
          EOL

          mkdir -p docs
          node generate-pdf.js

      - name: Commit and push PDF
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add -f docs/pdf.pdf
          git commit -m "Update generated PDF resume [$(date)]" || echo "No changes to commit"
          git push